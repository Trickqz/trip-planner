generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Roteiro {
  id         String      @id @default(cuid())
  destino    String
  dataInicio DateTime
  dataFim    DateTime
  orcamento  Float?
  notas      String?
  atividades Atividade[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  userId     String
  user       User        @relation(fields: [userId], references: [id])
}

model Atividade {
  id        String    @id @default(cuid())
  nome      String
  data      DateTime?
  roteiro   Roteiro   @relation(fields: [roteiroId], references: [id])
  roteiroId String
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  roteiros      Roteiro[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
